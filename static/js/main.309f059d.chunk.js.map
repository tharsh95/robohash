{"version":3,"sources":["components/Main.jsx","components/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Main","id","name","email","useState","image","setImage","useEffect","a","axios","get","response","config","url","fetchData","className","src","alt","Modal","setAppElement","Navbar","state","setState","user","setUser","search","setSearch","console","log","data","fetchUser","type","onClick","onChange","e","target","value","isOpen","onRequestClose","style","content","width","height","position","top","left","filter","toLowerCase","includes","map","el","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAqBeA,EAlBF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,EAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KAQA,OAPAC,qBAAU,WAAI,4CACV,4BAAAC,EAAA,sEAC2BC,IAAMC,IAAN,+BAAkCT,EAAlC,aAD3B,OACUU,EADV,OAEIL,EAASK,EAASC,OAAOC,KAF7B,4CADU,uBAAC,WAAD,wBAKVC,MAGA,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKX,EAAOY,IAAI,KACrB,6BAAKf,IACL,4BAAIC,Q,MCXhBe,IAAMC,cAAc,SACpB,IAwDeC,EAxDA,WACX,MAA0BhB,oBAAS,GAAnC,mBAAOiB,EAAP,KAAcC,EAAd,KACA,EAAwBlB,mBAAS,IAAjC,mBAAOmB,EAAP,KAAaC,EAAb,KACA,EAA0BpB,mBAAS,IAAnC,mBAAOqB,EAAP,KAAeC,EAAf,KAcA,OAbAnB,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEAC2BC,IAAMC,IAAN,8CAD3B,OACUC,EADV,OAEIgB,QAAQC,IAAIjB,EAASkB,MACrBL,EAAQb,EAASkB,MAHrB,4CADY,uBAAC,WAAD,wBAOZC,KACD,IAMC,qCACI,0CACA,gCACI,qBAAIf,UAAU,mCAAd,UACI,wBAAQgB,KAAK,SAAShB,UAAU,sBAAsBiB,QAAS,kBAAMV,GAAS,IAA9E,wBACA,uBAAOS,KAAK,OAAOE,SAVnC,SAAsBC,GAClBR,EAAUQ,EAAEC,OAAOC,aAWX,cAAC,IAAD,CAAOC,OAAQhB,EAAOiB,eAAgB,kBAAMhB,GAAS,IACjDiB,MACI,CACIC,QAAS,CACLC,MAAO,QACPC,OAAQ,QACRC,SAAU,WACVC,IAAK,QACLC,KAAM,eAM1B,qBAAK9B,UAAU,mBAAf,SACKQ,EAAKuB,QAAO,SAAAvB,GACT,MAAc,KAAXE,GAEKF,EAAKrB,KAAK6C,cAAcC,SAASvB,EAAOsB,gBAEhDxB,EAAKpB,MAAM4C,cAAcC,SAASvB,EAAOsB,eAHlCxB,OACF,KAIN0B,KAAI,SAACC,GACJ,OACI,cAAC,EAAD,CAAiBhD,KAAMgD,EAAGhD,KAAKD,GAAIiD,EAAGjD,GAAIE,MAAO+C,EAAG/C,OAAzC+C,EAAGjD,aC5CvBkD,MARf,WACE,OACE,qBAAKpC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.309f059d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport './main.css'\r\nconst Main = ({id, name, email}) => {\r\n    const [image, setImage] = useState()\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const response = await axios.get(`https://robohash.org/${id}?200x200`)\r\n            setImage(response.config.url)\r\n        }\r\n        fetchData()\r\n    })\r\n    return (\r\n        <div className='image'>\r\n            <img src={image} alt=\"\" />\r\n            <h4>{name}</h4>\r\n            <p>{email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal'\r\nimport Main from './Main'\r\nimport './navbar.css'\r\nModal.setAppElement('#root')\r\nconst Navbar = () => {\r\n    const [state, setState] = useState(false)\r\n    const [user, setUser] = useState([])\r\n    const [search, setSearch]=useState(\"\")\r\n    useEffect(() => {\r\n        async function fetchUser() {\r\n            const response = await axios.get(`https://jsonplaceholder.typicode.com/users`)\r\n            console.log(response.data)\r\n            setUser(response.data)\r\n            \r\n        }\r\n        fetchUser()\r\n    }, [])\r\n    function handleChange(e){\r\n        setSearch(e.target.value)\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <h1>Robohash</h1>\r\n            <div>\r\n                <ul className=\"nav justify-content-center  my-3\">\r\n                    <button type=\"button\" className=\"btn btn-danger mx-3\" onClick={() => setState(true)}>Open Popup</button>\r\n                    <input type=\"text\" onChange={handleChange}/>\r\n                </ul>\r\n                <Modal isOpen={state} onRequestClose={() => setState(false)}\r\n                    style={\r\n                        {\r\n                            content: {\r\n                                width: '700px',\r\n                                height: '400px',\r\n                                position: 'absolute',\r\n                                top: '210px',\r\n                                left: '400px',\r\n                            }\r\n                        }\r\n                    }>\r\n                </Modal>\r\n            </div>\r\n            <div className=\"image__container\">\r\n                {user.filter(user=>{\r\n                    if(search === \"\")\r\n                    return user\r\n                    else if(user.name.toLowerCase().includes(search.toLowerCase()) \r\n                    ||\r\n                    user.email.toLowerCase().includes(search.toLowerCase( )) )\r\n                    return user\r\n                }).map((el) => {\r\n                    return (\r\n                        <Main key={el.id}name={el.name}id={el.id} email={el.email} />\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Navbar\r\n","import './App.css';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}